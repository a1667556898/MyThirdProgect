apply plugin: 'com.android.application'


def DEBUG = '"www,debug"';
def RELEASE = '"www,release"';

android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]
    defaultConfig {
        applicationId rootProject.ext.android["applicationId"]
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }


    productFlavors {
        //发布环境配置
        product {
            buildConfigField "String", "BASEURL", RELEASE
            manifestPlaceholders = ["app_name" : "she哈哈m",
                                    "icon"     : "@mipmap/ic_launcher",
                                    "roundIcon": "@mipmap/ic_launcher_round"

            ]
        }
        //测试环境配置
        beta {
            buildConfigField "String", "BASEURL", DEBUG
            applicationId "com.test"
            manifestPlaceholders = ["app_name" : "betahaha",
                                    "icon"     : "@mipmap/ico",
                                    "roundIcon": "@mipmap/ico"

            ]
        }
    }
    sourceSets {
        main {
            manifest.srcFile 'src/main/AndroidManifest.xml'
            java.srcDirs = ['src/main/java']
            resources.srcDirs = ['src/main/java']
            aidl.srcDirs = ['src/main/java']
            renderscript.srcDirs = ['src/main/java']
            res.srcDirs = ['src/main/res']
            assets.srcDirs = ['src/main/assets']
            jniLibs.srcDirs = ['libs']

        }

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    signingConfigs {
        release {
            //加载资源
            storeFile file('../key/aa.jks')
            storePassword rootProject.ext.android["key_store_password"]
            keyAlias rootProject.ext.android["key_alias_password"]
            keyPassword rootProject.ext.android["key_alias"]
        }
        debug {

        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile rootProject.ext.dependencies["appcompat-v7"]
    compile rootProject.ext.dependencies["junit"]
    testCompile rootProject.ext.dependencies["constraint"]
}
